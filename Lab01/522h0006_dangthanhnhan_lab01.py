# -*- coding: utf-8 -*-
"""522H0006_DangThanhNhan_Lab01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19Wr-uUBy3f5RwvhcizroMHxbLL1Lgmm6

**Đặng Thành Nhân-MSSV:522H0006-Nhóm 8 tổ 2 -Lab1**
"""

# ex01
import numpy as np

x = [1, 3, 5, 2, 9]
y = [-1, 3, 15, 27, 29]
print("x = ", x)
print("y =  ", y)
print()
print("len x = ", len(x))
print("len y = ", len(y))
print()
print("x + y = ", x+y)
print()


vx = np.array(x)
vy = np.array(y)

print("vx = ", vx)
print("vy = ", vy)
print()
print("len vx = ", len(vx))
print("len vy = ", len(vy))
print()
print("vx + vy = ", vx + vy)
print()
print("x[0] = ", x[0])
print("vx[1] = ", vx[1])

# ex02
import numpy as np
import math
import string

#a
n=11
b1 = [12+i*2 for i in np.arange(0, n)]
b2 = np.arange(12, 12+n*2, 2)
print("a) b1 = ", b1)
print("a) b2 = ", b2)
print()

#b
n=11
c = np.arange(31, 31+n*2, 2)
print("b) c = ", c)
print()

#c
x = np.arange(-5, -5+n, 1)
print("c) x = ", x)
print()

#d
y = np.arange(5, 5-n, -1)
print("d) y = ", y)
print()

#e
n=8
z = np.arange(10, 10-n*2, -2)
print("e) z = ", z)
print()

#f
print("f)")
print()
n=8
w1 =[1]
for i in range(1, n):
  w1.append(2*w1[i-1])
print("w1 =", w1)
print()
w = [1.0/w1[i] for i in range(len(w1))]
print("w = ", w)
print()

#g
print("g)" )
print()
n=8
d1 = [1, 1]
for i in range(2, n):
  d1.append(d1[i-1] + d1[i-2])
print("d1 = ", d1)
print()
d_final = [1.0/d1[i] for i in range(len(d1))]
print("d = ", d_final)
print()

#h
print("h)" )
print()
n=24
t=1
e1 = [2]

for i in range(t, n+1):
  if(i>1):
    for j in range(2,i):
      if(i%j==0):  break
    else: e1.append(i)
e2=e1[1:n]
print("e1 = ", e2)
print()

e = [1.0/e2[i] for i in range(len(e2))]
print("e = ", e)
print()

# i
print("i) ")
print()
n=8
a1 =[1]
for i in range(1, n):
  a1.append(a1[i-1] + i + 1)
a = np.array(a1)
print("a = ", a)
print()

# j
print("j) ")
print()
N=4
j=0
n1 =[2]
for i in range(1, N):
  n1.append(n1[i-1] + 3 + j)
  j=j+2
n2 = [1.0/i for i in n1]
print("n = ", n2)
print()

#k
print("k) ")
print()
p1=[]
p2=[]
p=[]
# b1 = [12+i*2 for i in np.arange(0, n)]
p1 = [i for i in np.arange(0, 5)]
p2 = [j for j in np.arange(1, 6)]

print("p1 =", p1)
print("p2 =", p2)
print()

p = [p1[i]*1.0/p2[i] for i in range(len(p1))]
print("p = ", p)
print()

#l
print("l)")
print()
m =[chr(i) for i in range(ord("a"), ord("z")+1)]
m1 = np.array(m)
print("m = ", m1)

# m
print("m) ")
print()
s1=[]
for i in range(ord("A"), ord("J")+1):
  if(chr(i)!='B' and chr(i)!='C' and chr(i)!='E' and chr(i)!='F' and chr(i)!='H' and chr(i)!='I'):
    s1.append(chr(i))
s = np.array(s1)
print("s = ", s)

#ex03
import numpy as np
n=5

x = [10**i for i in range(1, n+1)]
print("x= ", x)

#ex04
import numpy as np


x = [1, 2, 3]
y = [98, 12, 33]
print("x = ", x)
print("y = ", y)
print()
for i in range(0, len(x)):
  x.append(y[i])
z = np.array(x)
print("z = ", z)

#ex06
import numpy as np

x = [0+i*2 for i in range(0, 11)]

print("x = ", x)
print()
#a
print("a)")
x1=[]
for i in range(0, 6):
  x1.append(x[i])
print(x1)
print()

#b
print("b)")
print("5_last = ", x[-5:len(x)])
print()

#c
print("c)")
c=[]
for i in range(len(x)+1):
  if(i==1 or i==4 or i==len(x)):
    c.append(x[i-1])
print("1_4_last = ", c)
print()

#d
print("d)")
c=[]
for i in range(len(x)+1):
  if(i==1 or i==3 or i==5 or i==7):
    c.append(x[i-1])
print("1_3_5_7 = ", c)
print()

#e
print("e)")
print("x_even = ", x[1:len(x):2])
print()

#f
print("f)")
print("x_odd = ", x[0:len(x):2])

#ex07
import numpy as np
import math

x = np.array([3, 11, -9, -131, -1, 1, -11, 91, -6, 407, -12, -11, 12, 153, 371])
print("x = ", x)
print()

#a
print("a) ")
print("max_x = ", np.max(x))
print()

#b
print("b) ")
print("min_x = ", np.min(x))
print()

#c
print("c) ")
x1 = [x[i] for i in range(len(x)) if x[i]>=10]
print("The values greater than 10 is: ", x1)
print()

#d
print("d) ")
print("x_reverse = ", np.flipud(x))
print()

#e
print("e)")
x4 = list(x)
x4.sort()
x5=np.array(x4)
print("x_ascending = ", x5)
print()

#f
print("f) ")
x6=list(x)
x6.sort(reverse=True)
x7=np.array(x6)
print("x_descending = ", x7)
print()

#g
print("g) ")
n = len(x)
count = 0
for i in range(len(x)):
    for j in range(i+1, len(x)):
        if x[i]+x[j]==0:
            count += 1
print("The times xi+ xj = 0 is: ", count)
print()

#h
print("h)" )
temp = {}
for i in x:
        if i in temp:
            temp[i] += 1
        else:
            temp[i] = 1
count = sum(temp[i] > 1 for i in temp)
print("S = ", count)
print()

#i
print("i)" )
y=[]
N = len(x)
y = [x[i]+x[N-i-1] for i in range(len(x))]
print("y = ", y)
print()

#j
print("j)" )
def Arms(num):
    if num>0:
        num_str = str(num)
        n = len(num_str)
        s = sum(int(i)**n for i in num_str)
        return s == num
    else:
        return False
w = [num for num in x if Arms(num)]
print("w = ",w)
print()

#k
print("k)" )
k = np.delete(x, x<0)
print("x+ = ", k)
print()

#l
print("l)" )
l = np.median(x)
print("x_med = ", l)
print()

#m
print("m)" )
mean = np.median(x)
m = sum(x[i] for i in range(len(x)) if x[i]<mean)
print("m = ", m)
print()

#n
print("n)" )
n = [abs(i) if i<0 else i for i in x]
print("n = ", n)